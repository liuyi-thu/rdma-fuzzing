Function Name: ___ibv_query_port
Output:
int ___ibv_query_port(struct ibv_context * context, uint8_t port_num, struct ibv_port_attr * port_attr);
struct ibv_context {
    struct ibv_device * device;
    struct ibv_device {
        struct _ibv_device_ops _ops;
        struct _ibv_device_ops {
            struct ibv_context *(*)(struct ibv_device *, int) _dummy1;
            void (*)(struct ibv_context *) _dummy2;
        };
        enum ibv_node_type node_type;
        enum ibv_node_type {
            IBV_NODE_UNKNOWN = -1,
            IBV_NODE_CA = 1,
            IBV_NODE_SWITCH = 2,
            IBV_NODE_ROUTER = 3,
            IBV_NODE_RNIC = 4,
            IBV_NODE_USNIC = 5,
            IBV_NODE_USNIC_UDP = 6,
            IBV_NODE_UNSPECIFIED = 7,
        };
        enum ibv_transport_type transport_type;
        enum ibv_transport_type {
            IBV_TRANSPORT_UNKNOWN = -1,
            IBV_TRANSPORT_IB = 0,
            IBV_TRANSPORT_IWARP = 1,
            IBV_TRANSPORT_USNIC = 2,
            IBV_TRANSPORT_USNIC_UDP = 3,
            IBV_TRANSPORT_UNSPECIFIED = 4,
        };
        char[64] name;
        char[64] dev_name;
        char[256] dev_path;
        char[256] ibdev_path;
    };
    struct ibv_context_ops ops;
    struct ibv_context_ops {
        int (*)(struct ibv_context *, struct ibv_device_attr *) _compat_query_device;
        int (*)(struct ibv_context *, uint8_t, struct _compat_ibv_port_attr *) _compat_query_port;
        void *(*)(void) _compat_alloc_pd;
        void *(*)(void) _compat_dealloc_pd;
        void *(*)(void) _compat_reg_mr;
        void *(*)(void) _compat_rereg_mr;
        void *(*)(void) _compat_dereg_mr;
        struct ibv_mw *(*)(struct ibv_pd *, enum ibv_mw_type) alloc_mw;
        int (*)(struct ibv_qp *, struct ibv_mw *, struct ibv_mw_bind *) bind_mw;
        int (*)(struct ibv_mw *) dealloc_mw;
        void *(*)(void) _compat_create_cq;
        int (*)(struct ibv_cq *, int, struct ibv_wc *) poll_cq;
        int (*)(struct ibv_cq *, int) req_notify_cq;
        void *(*)(void) _compat_cq_event;
        void *(*)(void) _compat_resize_cq;
        void *(*)(void) _compat_destroy_cq;
        void *(*)(void) _compat_create_srq;
        void *(*)(void) _compat_modify_srq;
        void *(*)(void) _compat_query_srq;
        void *(*)(void) _compat_destroy_srq;
        int (*)(struct ibv_srq *, struct ibv_recv_wr *, struct ibv_recv_wr **) post_srq_recv;
        void *(*)(void) _compat_create_qp;
        void *(*)(void) _compat_query_qp;
        void *(*)(void) _compat_modify_qp;
        void *(*)(void) _compat_destroy_qp;
        int (*)(struct ibv_qp *, struct ibv_send_wr *, struct ibv_send_wr **) post_send;
        int (*)(struct ibv_qp *, struct ibv_recv_wr *, struct ibv_recv_wr **) post_recv;
        void *(*)(void) _compat_create_ah;
        void *(*)(void) _compat_destroy_ah;
        void *(*)(void) _compat_attach_mcast;
        void *(*)(void) _compat_detach_mcast;
        void *(*)(void) _compat_async_event;
    };
    int cmd_fd;
    int async_fd;
    int num_comp_vectors;
    pthread_mutex_t mutex;
    void * abi_compat;
};
struct ibv_port_attr {
    enum ibv_port_state state;
    enum ibv_port_state {
        IBV_PORT_NOP = 0,
        IBV_PORT_DOWN = 1,
        IBV_PORT_INIT = 2,
        IBV_PORT_ARMED = 3,
        IBV_PORT_ACTIVE = 4,
        IBV_PORT_ACTIVE_DEFER = 5,
    };
    enum ibv_mtu max_mtu;
    enum ibv_mtu {
        IBV_MTU_256 = 1,
        IBV_MTU_512 = 2,
        IBV_MTU_1024 = 3,
        IBV_MTU_2048 = 4,
        IBV_MTU_4096 = 5,
    };
    enum ibv_mtu active_mtu;
    int gid_tbl_len;
    uint32_t port_cap_flags;
    uint32_t max_msg_sz;
    uint32_t bad_pkey_cntr;
    uint32_t qkey_viol_cntr;
    uint16_t pkey_tbl_len;
    uint16_t lid;
    uint16_t sm_lid;
    uint8_t lmc;
    uint8_t max_vl_num;
    uint8_t sm_sl;
    uint8_t subnet_timeout;
    uint8_t init_type_reply;
    uint8_t active_width;
    uint8_t active_speed;
    uint8_t phys_state;
    uint8_t link_layer;
    uint8_t flags;
    uint16_t port_cap_flags2;
    uint32_t active_speed_ex;
};

