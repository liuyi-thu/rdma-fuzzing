```python
class ImportPD(VerbCall):
    def __init__(self, pd_addr: str, pd_handle: int, ctx: CodeGenContext):
        self.pd_addr = pd_addr
        self.pd_handle = pd_handle
        ctx.alloc_pd(pd_addr)
        
    @classmethod
    def from_trace(cls, info: str, ctx: CodeGenContext):
        kv = _parse_kv(info)
        pd = kv.get("pd", "unknown")
        pd_handle = int(kv.get("pd_handle", 0))
        return cls(pd_addr=pd, pd_handle=pd_handle, ctx=ctx)

    def generate_c(self, ctx: CodeGenContext) -> str:
        pd_name = ctx.get_pd(self.pd_addr)
        return f"""
    /* ibv_import_pd */
    {pd_name} = ibv_import_pd({ctx.ib_ctx}, {self.pd_handle});
    if (!{pd_name}) {{
        fprintf(stderr, "Failed to import PD\\n");
        return -1;
    }}
"""
```