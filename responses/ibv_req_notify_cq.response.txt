```python
class ReqNotifyCQ(VerbCall):
    """Request completion notification on a completion queue (CQ)."""
    def __init__(self, cq_addr: str, solicited_only: int = 0):
        self.cq_addr = cq_addr
        self.solicited_only = solicited_only

    @classmethod
    def from_trace(cls, info: str, ctx: CodeGenContext):
        kv = _parse_kv(info)
        cq = kv.get("cq", "unknown")
        solicited_only = int(kv.get("solicited_only", 0))
        ctx.use_cq(cq)  # Ensure the CQ is used before generating code
        return cls(cq_addr = cq, solicited_only = solicited_only)

    def generate_c(self, ctx: CodeGenContext) -> str:
        cq_name = ctx.get_cq(self.cq_addr)
        return f"""
    /* ibv_req_notify_cq */
    if (ibv_req_notify_cq({cq_name}, {self.solicited_only})) {{
        fprintf(stderr, "Failed to request CQ notification\\n");
        return -1;
    }}
"""

# Add to VERB_FACTORY
VERB_FACTORY.update({
    "ibv_req_notify_cq": ReqNotifyCQ.from_trace
})
```