```python
class QueryECE(VerbCall):
    def __init__(self, qp_addr: str):
        self.qp_addr = qp_addr

    @classmethod
    def from_trace(cls, info: str, ctx: CodeGenContext):
        kv = _parse_kv(info)
        qp = kv.get("qp", "unknown")
        ctx.use_qp(qp)  # Ensure the QP is used before generating code
        return cls(qp_addr=qp)

    def generate_c(self, ctx: CodeGenContext) -> str:
        qp_name = ctx.get_qp(self.qp_addr)
        return f"""
    /* ibv_query_ece */
    struct ibv_ece ece = {{0}};
    int query_result = ibv_query_ece({qp_name}, &ece);
    if (query_result) {{
        fprintf(stderr, "Failed to query ECE options, error code: %d\\n", query_result);
        return -1;
    }}
    fprintf(stdout, "ECE options for QP: vendor_id=0x%x, options=0x%x, comp_mask=0x%x\\n",
            ece.vendor_id, ece.options, ece.comp_mask);
"""
```