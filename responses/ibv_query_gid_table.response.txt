```python
class QueryGIDTable(VerbCall):
    """Query GID table of a given RDMA device context."""
    def __init__(self, max_entries: int = 10):
        self.max_entries = max_entries

    @classmethod
    def from_trace(cls, info: str, ctx: CodeGenContext):
        kv = _parse_kv(info)
        return cls(max_entries=int(kv.get("max_entries", 10)))

    def generate_c(self, ctx: CodeGenContext) -> str:
        return f"""
    /* ibv_query_gid_table */
    struct ibv_gid_entry entries[{self.max_entries}];
    ssize_t num_gids = ibv_query_gid_table({ctx.ib_ctx}, entries, {self.max_entries}, 0);
    if (num_gids < 0) {{
        fprintf(stderr, "Failed to query GID table\\n");
        return -1;
    }} else {{
        fprintf(stdout, "Queried %zd GID table entries successfully\\n", num_gids);
    }}
"""
```