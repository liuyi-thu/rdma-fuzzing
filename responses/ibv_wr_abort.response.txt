```python
class AbortWR(VerbCall):
    """Abort all prepared work requests since wr_start."""
    def __init__(self, qp_addr: str):
        self.qp_addr = qp_addr

    @classmethod
    def from_trace(cls, info: str, ctx: CodeGenContext):
        kv = _parse_kv(info)
        qp = kv.get("qp", "unknown")
        ctx.use_qp(qp)  # Ensure the QP is used before generating code
        return cls(qp_addr=qp)

    def generate_c(self, ctx: CodeGenContext) -> str:
        qp_name = ctx.get_qp(self.qp_addr)
        qp_ex_name = f"{qp_name}_ex"
        return f"""
    /* Abort all work requests */
    struct ibv_qp_ex *{qp_ex_name} = ibv_qp_to_qp_ex({qp_name});
    ibv_wr_abort({qp_ex_name});
"""
```