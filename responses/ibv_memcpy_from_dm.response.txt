```python
class MemcpyFromDM(VerbCall):
    def __init__(self, host_addr: str, dm_addr: str, dm_offset: int = 0, length: int = 0):
        self.host_addr = host_addr
        self.dm_addr = dm_addr
        self.dm_offset = dm_offset
        self.length = length

    @classmethod
    def from_trace(cls, info: str, ctx: CodeGenContext):
        kv = _parse_kv(info)
        host_addr = kv.get("host_addr", "unknown")
        dm_addr = kv.get("dm", "unknown")
        dm_offset = int(kv.get("dm_offset", 0))
        length = int(kv.get("length", 0))
        ctx.use_dm(dm_addr)
        return cls(host_addr=host_addr, dm_addr=dm_addr, dm_offset=dm_offset, length=length)

    def generate_c(self, ctx: CodeGenContext) -> str:
        dm_name = ctx.get_dm(self.dm_addr)
        return f"""
    /* ibv_memcpy_from_dm */
    if (ibv_memcpy_from_dm({self.host_addr}, {dm_name}, {self.dm_offset}, {self.length}) != 0) {{
        fprintf(stderr, "Failed to copy from device memory\\n");
        return -1;
    }}
"""
```