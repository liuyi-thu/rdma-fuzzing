请补全以下函数对应的verb描述（用在verbs.py中）：

- ibv_query_port

请直接生成python代码，我之后会自行添加到verbs.py中。
函数详细信息：
Function Name: ibv_query_port
Output:
int ibv_query_port(struct ibv_context * context, uint8_t port_num, struct _compat_ibv_port_attr * port_attr);
struct ibv_context {
    struct ibv_device * device;
    struct ibv_device {
        struct _ibv_device_ops _ops;
        struct _ibv_device_ops {
            struct ibv_context *(*)(struct ibv_device *, int) _dummy1;
            void (*)(struct ibv_context *) _dummy2;
        };
        enum ibv_node_type node_type;
        enum ibv_node_type {
            IBV_NODE_UNKNOWN = -1,
            IBV_NODE_CA = 1,
            IBV_NODE_SWITCH = 2,
            IBV_NODE_ROUTER = 3,
            IBV_NODE_RNIC = 4,
            IBV_NODE_USNIC = 5,
            IBV_NODE_USNIC_UDP = 6,
            IBV_NODE_UNSPECIFIED = 7,
        };
        enum ibv_transport_type transport_type;
        enum ibv_transport_type {
            IBV_TRANSPORT_UNKNOWN = -1,
            IBV_TRANSPORT_IB = 0,
            IBV_TRANSPORT_IWARP = 1,
            IBV_TRANSPORT_USNIC = 2,
            IBV_TRANSPORT_USNIC_UDP = 3,
            IBV_TRANSPORT_UNSPECIFIED = 4,
        };
        char[64] name;
        char[64] dev_name;
        char[256] dev_path;
        char[256] ibdev_path;
    };
    struct ibv_context_ops ops;
    struct ibv_context_ops {
        int (*)(struct ibv_context *, struct ibv_device_attr *) _compat_query_device;
        int (*)(struct ibv_context *, uint8_t, struct _compat_ibv_port_attr *) _compat_query_port;
        void *(*)(void) _compat_alloc_pd;
        void *(*)(void) _compat_dealloc_pd;
        void *(*)(void) _compat_reg_mr;
        void *(*)(void) _compat_rereg_mr;
        void *(*)(void) _compat_dereg_mr;
        struct ibv_mw *(*)(struct ibv_pd *, enum ibv_mw_type) alloc_mw;
        int (*)(struct ibv_qp *, struct ibv_mw *, struct ibv_mw_bind *) bind_mw;
        int (*)(struct ibv_mw *) dealloc_mw;
        void *(*)(void) _compat_create_cq;
        int (*)(struct ibv_cq *, int, struct ibv_wc *) poll_cq;
        int (*)(struct ibv_cq *, int) req_notify_cq;
        void *(*)(void) _compat_cq_event;
        void *(*)(void) _compat_resize_cq;
        void *(*)(void) _compat_destroy_cq;
        void *(*)(void) _compat_create_srq;
        void *(*)(void) _compat_modify_srq;
        void *(*)(void) _compat_query_srq;
        void *(*)(void) _compat_destroy_srq;
        int (*)(struct ibv_srq *, struct ibv_recv_wr *, struct ibv_recv_wr **) post_srq_recv;
        void *(*)(void) _compat_create_qp;
        void *(*)(void) _compat_query_qp;
        void *(*)(void) _compat_modify_qp;
        void *(*)(void) _compat_destroy_qp;
        int (*)(struct ibv_qp *, struct ibv_send_wr *, struct ibv_send_wr **) post_send;
        int (*)(struct ibv_qp *, struct ibv_recv_wr *, struct ibv_recv_wr **) post_recv;
        void *(*)(void) _compat_create_ah;
        void *(*)(void) _compat_destroy_ah;
        void *(*)(void) _compat_attach_mcast;
        void *(*)(void) _compat_detach_mcast;
        void *(*)(void) _compat_async_event;
    };
    int cmd_fd;
    int async_fd;
    int num_comp_vectors;
    pthread_mutex_t mutex;
    void * abi_compat;
};

函数相关文档：
---
date: 2006-10-31
section: 3
title: IBV_QUERY_PORT
---

# NAME

ibv_query_port - query an RDMA port\'s attributes

# SYNOPSIS

    #include <infiniband/verbs.h>

    int ibv_query_port(struct ibv_context *context, uint8_t port_num,
     struct ibv_port_attr *port_attr");

# DESCRIPTION

**ibv_query_port()** returns the attributes of port *port_num* for
device context *context* through the pointer *port_attr.* The argument
*port_attr* is an ibv_port_attr struct, as defined in
\<infiniband/verbs.h\>.

    struct ibv_port_attr {
    enum ibv_port_state     state;          /* Logical port state */
    enum ibv_mtu            max_mtu;        /* Max MTU supported by port */
    enum ibv_mtu            active_mtu;     /* Actual MTU */
    int                     gid_tbl_len;    /* Length of source GID table */
    uint32_t                port_cap_flags; /* Port capabilities */
    uint32_t                max_msg_sz;     /* Maximum message size */
    uint32_t                bad_pkey_cntr;  /* Bad P_Key counter */
    uint32_t                qkey_viol_cntr; /* Q_Key violation counter */
    uint16_t                pkey_tbl_len;   /* Length of partition table */
    uint16_t                lid;            /* Base port LID */
    uint16_t                sm_lid;         /* SM LID */
    uint8_t                 lmc;            /* LMC of LID */
    uint8_t                 max_vl_num;     /* Maximum number of VLs */
    uint8_t                 sm_sl;          /* SM service level */
    uint8_t                 subnet_timeout; /* Subnet propagation delay */
    uint8_t                 init_type_reply;/* Type of initialization performed by SM */
    uint8_t                 active_width;   /* Currently active link width */
    uint8_t                 active_speed;   /* Currently active link speed if speed<XDR,NDR otherwise */
    uint8_t                 phys_state;     /* Physical port state */
    uint8_t                 link_layer;     /* link layer protocol of the port */
    uint8_t                 flags;          /* Port flags */
    uint16_t                port_cap_flags2;/* Port capabilities */
    uint32_t                active_speed_ex;/* Currently active link speed, if it is 0 refer to active_speed instead */
    };

    possible values for the link layer field are IBV_LINK_LAYER_INFINIBAND,
    IBV_LINK_LAYER_ETHERNET, or IBV_LINK_LAYER_UNSPECIFIED.

    supported port flags:
    IBV_QPF_GRH_REQUIRED - When this flag is set, the applications must create all AH with GRH configured.

# RETURN VALUE

**ibv_query_port()** returns 0 on success, or the value of errno on
failure (which indicates the failure reason).

# SEE ALSO

**ibv_create_qp**(3), **ibv_destroy_qp**(3), **ibv_query_qp**(3),
**ibv_create_ah**(3)

# AUTHORS

Dotan Barak \<dotanba@gmail.com\>

请确保描述简洁明了，适合放在verbs.py中。输出中只需要含有python代码本身即可，无需含有说明性文字。