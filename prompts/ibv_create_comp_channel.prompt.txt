请补全以下函数对应的verb描述（用在verbs.py中）：

- ibv_create_comp_channel

请直接生成python代码，我之后会自行添加到verbs.py中。
函数详细信息：
Function Name: ibv_create_comp_channel
Output:
struct ibv_comp_channel * ibv_create_comp_channel(struct ibv_context * context);
struct ibv_comp_channel {
    struct ibv_context * context;
    struct ibv_context {
        struct ibv_device * device;
        struct ibv_device {
            struct _ibv_device_ops _ops;
            struct _ibv_device_ops {
                struct ibv_context *(*)(struct ibv_device *, int) _dummy1;
                void (*)(struct ibv_context *) _dummy2;
            };
            enum ibv_node_type node_type;
            enum ibv_node_type {
                IBV_NODE_UNKNOWN = -1,
                IBV_NODE_CA = 1,
                IBV_NODE_SWITCH = 2,
                IBV_NODE_ROUTER = 3,
                IBV_NODE_RNIC = 4,
                IBV_NODE_USNIC = 5,
                IBV_NODE_USNIC_UDP = 6,
                IBV_NODE_UNSPECIFIED = 7,
            };
            enum ibv_transport_type transport_type;
            enum ibv_transport_type {
                IBV_TRANSPORT_UNKNOWN = -1,
                IBV_TRANSPORT_IB = 0,
                IBV_TRANSPORT_IWARP = 1,
                IBV_TRANSPORT_USNIC = 2,
                IBV_TRANSPORT_USNIC_UDP = 3,
                IBV_TRANSPORT_UNSPECIFIED = 4,
            };
            char[64] name;
            char[64] dev_name;
            char[256] dev_path;
            char[256] ibdev_path;
        };
        struct ibv_context_ops ops;
        struct ibv_context_ops {
            int (*)(struct ibv_context *, struct ibv_device_attr *) _compat_query_device;
            int (*)(struct ibv_context *, uint8_t, struct _compat_ibv_port_attr *) _compat_query_port;
            void *(*)(void) _compat_alloc_pd;
            void *(*)(void) _compat_dealloc_pd;
            void *(*)(void) _compat_reg_mr;
            void *(*)(void) _compat_rereg_mr;
            void *(*)(void) _compat_dereg_mr;
            struct ibv_mw *(*)(struct ibv_pd *, enum ibv_mw_type) alloc_mw;
            int (*)(struct ibv_qp *, struct ibv_mw *, struct ibv_mw_bind *) bind_mw;
            int (*)(struct ibv_mw *) dealloc_mw;
            void *(*)(void) _compat_create_cq;
            int (*)(struct ibv_cq *, int, struct ibv_wc *) poll_cq;
            int (*)(struct ibv_cq *, int) req_notify_cq;
            void *(*)(void) _compat_cq_event;
            void *(*)(void) _compat_resize_cq;
            void *(*)(void) _compat_destroy_cq;
            void *(*)(void) _compat_create_srq;
            void *(*)(void) _compat_modify_srq;
            void *(*)(void) _compat_query_srq;
            void *(*)(void) _compat_destroy_srq;
            int (*)(struct ibv_srq *, struct ibv_recv_wr *, struct ibv_recv_wr **) post_srq_recv;
            void *(*)(void) _compat_create_qp;
            void *(*)(void) _compat_query_qp;
            void *(*)(void) _compat_modify_qp;
            void *(*)(void) _compat_destroy_qp;
            int (*)(struct ibv_qp *, struct ibv_send_wr *, struct ibv_send_wr **) post_send;
            int (*)(struct ibv_qp *, struct ibv_recv_wr *, struct ibv_recv_wr **) post_recv;
            void *(*)(void) _compat_create_ah;
            void *(*)(void) _compat_destroy_ah;
            void *(*)(void) _compat_attach_mcast;
            void *(*)(void) _compat_detach_mcast;
            void *(*)(void) _compat_async_event;
        };
        int cmd_fd;
        int async_fd;
        int num_comp_vectors;
        pthread_mutex_t mutex;
        void * abi_compat;
    };
    int fd;
    int refcnt;
};

函数相关文档：
---
date: 2006-10-31
section: 3
title: IBV_CREATE_COMP_CHANNEL
---

# NAME

ibv_create_comp_channel, ibv_destroy_comp_channel - create or destroy a
completion event channel

# SYNOPSIS

    #include <infiniband/verbs.h>

    "structibv_comp_channel*ibv_create_comp_channel(structibv_context
     *context);

    int ibv_destroy_comp_channel(struct ibv_comp_channel *channel);

# DESCRIPTION

**ibv_create_comp_channel()** creates a completion event channel for the
RDMA device context *context.*

**ibv_destroy_comp_channel()** destroys the completion event channel
*channel.*

# RETURN VALUE

**ibv_create_comp_channel()** returns a pointer to the created
completion event channel, or NULL if the request fails.

**ibv_destroy_comp_channel()** returns 0 on success, or the value of
errno on failure (which indicates the failure reason).

# NOTES

A \"completion channel\" is an abstraction introduced by libibverbs that
does not exist in the InfiniBand Architecture verbs specification or
RDMA Protocol Verbs Specification. A completion channel is essentially
file descriptor that is used to deliver completion notifications to a
userspace process. When a completion event is generated for a completion
queue (CQ), the event is delivered via the completion channel attached
to that CQ. This may be useful to steer completion events to different
threads by using multiple completion channels.

**ibv_destroy_comp_channel()** fails if any CQs are still associated
with the completion event channel being destroyed.

# SEE ALSO

**ibv_open_device**(3), **ibv_create_cq**(3), **ibv_get_cq_event**(3)

# AUTHORS

Dotan Barak \<dotanba@gmail.com\>

请确保描述简洁明了，适合放在verbs.py中。输出中只需要含有python代码本身即可，无需含有说明性文字。